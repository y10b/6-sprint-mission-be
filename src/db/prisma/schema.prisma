generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  encryptedPassword String
  nickname          String    @unique
  refreshToken      String?
  comments          Comment[]
  likes             Like[]
  image             String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  Article           Article[]
  Product           Product[]
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  authorId  Int
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id])
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  tags        String[]
  price       Int
  sellerId    Int
  images      ProductImage[]
  comments    Comment[]
  likes       Like[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  seller      User           @relation(fields: [sellerId], references: [id])
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  articleId Int?
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  article   Article? @relation(fields: [articleId], references: [id])
  product   Product? @relation(fields: [productId], references: [id])
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  articleId Int?
  productId Int?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  article   Article? @relation(fields: [articleId], references: [id])
  product   Product? @relation(fields: [productId], references: [id])

  @@unique([userId, articleId])
  @@unique([userId, productId])
}
